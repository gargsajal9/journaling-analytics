# Bash commands used to generate event corpus
# PJ - July 2015

# Download all events from skylr
curl -H "Content-Type: application/json" -H "AuthToken: 79e0eb5ad4c0a4ceff6889dc6e8fd3ec188219db7a8a7e63d04a0730c2f9f0c9" -d '{"type":"find","query":{"data.ProjId":"journaling-chrome"}}' https://las-skylr-token.oscar.ncsu.edu/api/data/document/query > tmp-chrome-all
curl -H "Content-Type: application/json" -H "AuthToken: 79e0eb5ad4c0a4ceff6889dc6e8fd3ec188219db7a8a7e63d04a0730c2f9f0c9" -d '{"type":"find","query":{"data.ProjId":"journaling-ubuntu"}}' https://las-skylr-token.oscar.ncsu.edu/api/data/document/query > tmp-ubuntu-all

# For simple formatted output (one record per line) and filtered for PS598 users
cat tmp-chrome-all | jq -c . | sed -e 's/},{/}\n{/g'  | egrep -f ps598-users/USERS

# Summary of PS598 domains
less tmp-chrome-all | jq -c . | sed -e 's/},{/}\n{/g' | egrep -f ps598-users/USERS | jq '.data.WebURL' | cut -d'/' -f3 | sed -e 's/www.//' | sed -e 's/\"//g' | sort | uniq -c | sort -nr |  less

# Summary of prompting options
 less tmp-chrome-all | jq -c . | sed -e 's/},{/}\n{/g' | egrep -f ps598-users/USERS | jq '.data.TriggerOptions.page_time.time_on_page' | sort | uniq -c | sort -nr | less
less tmp-chrome-all | jq -c . | sed -e 's/},{/}\n{/g' | egrep -f ps598-users/USERS | jq '.data.TriggerOptions.page_scroll.page_percentage' | sort | uniq -c | sort -nr | less

# Extract JSON fields we care about using jq
cat tmp-chrome-all | jq '.data[].data.EvtTime' -c > tmp-chrome-EvtTime.txt
cat tmp-chrome-all | jq '.data[].data.UserId' -c > tmp-chrome-UserId.txt
cat tmp-chrome-all | jq '.data[].data.TaskName' -c > tmp-chrome-TaskName.txt
cat tmp-chrome-all | jq '.data[].data.WebURL' -c > tmp-chrome-WebURL.txt

# For future - when goal options are available in production
#cat tmp-chrome-all | jq '.data[].data.Trigger' -c | sort | uniq
#cat tmp-chrome-all | jq '.data[].data.GoalPicked' -c | sort | uniq

# Rejoin in a single csv file and sort by time
# Can also paste using a tab character here!
paste -d, tmp-chrome-EvtTime.txt tmp-chrome-UserId.txt tmp-chrome-TaskName.txt tmp-chrome-WebURL.txt | sed -e 's/\"//g' > tmp-chrome-all-joined.csv
paste -d, tmp-ubuntu-EvtTime.txt tmp-ubuntu-UserId.txt tmp-ubuntu-TaskName.txt tmp-ubuntu-EvtDesc.txt | sed -e 's/\"//g' > tmp-ubuntu-all-joined.csv
cat tmp-chrome-all-joined.csv tmp-ubuntu-all-joined.csv | sort > tmp-all-sorted.csv

# Make TaskName field consistent
cat tmp-all-sorted.csv | sed -e 's/))((/_/g' | sed -e 's/((//' | sed -e 's/))//' | sed -e 's/,/_/g' | sed -e 's/\[//' | sed -e 's/\]//' | sed -e 's/pjones_//' > tmp-all-sorted-cleaned.csv

# Extract only CSC791 records
cat tmp-all-sorted-cleaned.csv | grep CSC791 > tmp-all-sorted-cleaned-csc791.csv
cat tmp-all-sorted-cleaned.csv | grep CSC791 | grep -v None > tmp-all-sorted-cleaned-csc791.csv
cat tmp-all-sorted-cleaned.csv | grep CSC791 | grep -v None | grep -v pj201 > tmp-all-sorted-cleaned-csc791.csv
cat tmp-all-sorted-cleaned-csc791.csv | sed -e 's/\t/,/g' | gzip > csc791-events-all.csv.gz

# Separate by User (and filter for CSC791 and CoyWolf)
cat tmp-all-sorted-cleaned-csc791.csv | grep pjones > csc791-users/pjones.csv

# Do baseline experiments as per Google Doc:
# - Create precision/recall plot for different values of ts_diff between events.
cd csc791-users
python process-full-baseline.py

